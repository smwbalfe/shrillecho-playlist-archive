name: 'Infra Pipeline'
on:
  push:
    paths:
      - 'infra/**'
      - '.github/workflows/infra.yml'
  pull_request:
  workflow_dispatch:

env:
  TF_WORKING_DIR: './infra/terraform'
  BUCKET_NAME: shrillecho-tf-state

jobs:
  create_state_bucket:
    runs-on: ubuntu-latest
    environment: shrillecho
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}/bucket
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Check if bucket exists
      id: check_bucket
      run: bash ../../../scripts/ci/check_s3_exists.sh

    - uses: hashicorp/setup-terraform@v3
      if: steps.check_bucket.outputs.bucket_exists == 'false'
    
    - name: Terraform Init
      if: steps.check_bucket.outputs.bucket_exists == 'false'
      run: terraform init
    
    - name: Create State Bucket
      if: steps.check_bucket.outputs.bucket_exists == 'false'
      run: terraform apply -auto-approve

  terraform:
    needs: create_state_bucket
    runs-on: ubuntu-latest
    environment: shrillecho
    outputs:
      droplet_ip: ${{ steps.droplet_ip.outputs.droplet_ip }} 
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    
    - uses: hashicorp/setup-terraform@v3
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Plan
      run: terraform plan
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
    
    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}

    - name: Store Droplet IP
      id: droplet_ip
      run: bash ../../scripts/ci/read_droplet_ip.sh

  ssh_and_echo:
    needs: terraform
    environment: shrillecho
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Dump Environment Variables
      env:
        HOST: ${{ needs.terraform.outputs.droplet_ip }}
        USER: root
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "HOST: $HOST"
        echo "USER: $USER"
        echo "KEY: $KEY"