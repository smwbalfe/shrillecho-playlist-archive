name: 'Infra Pipeline'
on:
  push:
    paths:
      - 'scraper/**'
  pull_request:
  workflow_dispatch:
env:
  TF_WORKING_DIR: './infra/terraform'

jobs:
  create_state_bucket:
    runs-on: ubuntu-latest
    environment: shrillecho
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - uses: hashicorp/setup-terraform@v3
    
    - name: Terraform Init
      run: terraform init
    
    - name: Create State Bucket
      run: terraform apply -auto-approve

  terraform:
    needs: create_state_bucket
    runs-on: ubuntu-latest
    environment: shrillecho
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - uses: hashicorp/setup-terraform@v3
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Plan
      run: terraform plan
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
    
    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}